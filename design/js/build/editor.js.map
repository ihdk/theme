{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../themes/citadela/design/js/editor.js","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["registerPlugin","wp","plugins","PluginDocumentSettingPanel","editPost","__","i18n","data","withSelect","withDispatch","components","CheckboxControl","TextControl","BaseControl","PageSettingsPanel","props","post_type","select","getCurrentPostType","hide_page_title","value","onChange","remove_header_space","CitadelaSettings","activeProPlugin","custom_class","getEditedPostAttribute","dispatch","metaKey","type","meta","render","getCurrentPost","includes","ignore_special_page","title","icon"],"mappings":"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","file":"editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../themes/citadela/design/js/editor.js\");\n","const { registerPlugin } = wp.plugins;\r\nconst { PluginDocumentSettingPanel } = wp.editPost;\r\nconst { __ } = wp.i18n;\r\nconst { withSelect, withDispatch } = wp.data;\r\nconst { CheckboxControl, TextControl, BaseControl } = wp.components;\r\n\r\nlet PageSettingsPanel = ( props ) => {\r\n    const post_type = wp.data.select(\"core/editor\").getCurrentPostType();\r\n    return (\r\n        <>\r\n            { post_type !== 'post' &&\r\n                <>\r\n                    <CheckboxControl\r\n                        label={ __( 'Hide page title section', 'citadela' ) }\r\n                        checked={ props.hide_page_title }\r\n                        onChange={ ( value ) => { props.onChange( value, '_citadela_hide_page_title' ) } }\r\n                    />\r\n                    { props.hide_page_title && <CheckboxControl\r\n                        label={ __( 'Remove space under header', 'citadela' ) }\r\n                        checked={ props.remove_header_space }\r\n                        onChange={ ( value ) => { props.onChange( value, '_citadela_remove_header_space' ) } }\r\n                    /> }\r\n                </>\r\n            }\r\n\r\n            { CitadelaSettings.activeProPlugin &&\r\n                <TextControl\r\n                    label={ __( 'Custom CSS class', 'citadela' ) }\r\n                    help={ __( 'Add more classes separated by space.', 'citadela' ) }\r\n                    value={ props.custom_class }\r\n                    onChange={ ( value ) => { props.onChange( value, '_citadela_custom_class', 'text' ) } }\r\n                />\r\n            }\r\n\r\n        </>\r\n        );\r\n    };\r\n\r\nPageSettingsPanel = withSelect(\r\n    ( select ) => {\r\n        return {\r\n            hide_page_title: wp.data.select( 'core/editor' ).getEditedPostAttribute( 'meta' )['_citadela_hide_page_title'] == '1',\r\n            remove_header_space: wp.data.select( 'core/editor' ).getEditedPostAttribute( 'meta' )['_citadela_remove_header_space'] == '1',\r\n            custom_class: wp.data.select( 'core/editor' ).getEditedPostAttribute( 'meta' )['_citadela_custom_class']\r\n        }\r\n    }\r\n) (PageSettingsPanel);\r\n\r\n// do not forget register meta in CitadelaTheme.php!\r\nPageSettingsPanel = withDispatch(\r\n    ( dispatch ) => {\r\n        return {\r\n            onChange: ( value, metaKey, type = 'checkbox' ) => {\r\n                let meta = {};\r\n                \r\n                if( type == 'checkbox' ){\r\n                    meta[ metaKey ] = value ? '1' : '0';\r\n                }\r\n\r\n                if( type == 'text' ){\r\n                    meta[ metaKey ] = value ? value : '';\r\n                }\r\n\r\n                dispatch( 'core/editor' ).editPost( {\r\n                    meta: meta\r\n                } );\r\n\r\n                if ( metaKey == '_citadela_hide_page_title' && !value ) {\r\n                    dispatch( 'core/editor' ).editPost( {\r\n                        meta: { '_citadela_remove_header_space': '0' }\r\n                    } );\r\n                }\r\n            }\r\n        }\r\n    }\r\n) (PageSettingsPanel);\r\n\r\nregisterPlugin( 'citadela-page-settings-panel', {\r\n    render: () => {\r\n        const { getCurrentPost, getCurrentPostType, getEditedPostAttribute } = wp.data.select(\"core/editor\");\r\n        if ( ! [ 'page', 'post', 'special_page', 'citadela-item' ].includes( getCurrentPostType() ) ) {\r\n            return null;\r\n        }\r\n        \r\n        //disable panel for posts, there are no settings yet with disabled Citadela Pro plugin\r\n        if( getCurrentPostType() == 'post' && ! CitadelaSettings.activeProPlugin ){\r\n            return null;\r\n        }\r\n\r\n        //additionally check if use options for Item page\r\n        const ignore_special_page = getEditedPostAttribute( 'meta' )['_citadela_ignore_special_page'] == '1'\r\n        if( getCurrentPostType() == 'citadela-item' && ! ignore_special_page ){\r\n            return null;\r\n        }\r\n        \r\n        let title = __( 'Citadela Page Settings', 'citadela' );\r\n\r\n        if( getCurrentPostType() == 'post' ){\r\n            title = __( 'Citadela Post Settings', 'citadela' );            \r\n        }\r\n\r\n        return (\r\n            <PluginDocumentSettingPanel\r\n                name=\"ctdl-page-settings-panel\"\r\n                title={ title }\r\n            >\r\n                <PageSettingsPanel />\r\n            </PluginDocumentSettingPanel>\r\n        )\r\n    },\r\n    icon: ''\r\n} );","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}